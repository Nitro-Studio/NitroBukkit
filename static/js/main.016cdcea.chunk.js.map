{"version":3,"sources":["assets/img/login_bg.png","assets/img/login.svg","reducers/store.js","reducers/actions.js","reducers/types.js","pages/Home/Home.js","functions/info.js","pages/Login/Login.js","functions/valid.js","components/Navbar.js","components/Sidebar.js","components/PageHeader.js","pages/Dashboard/MainTab.js","pages/Dashboard/Dashboard.js","pages/Server/Server.js","index.js"],"names":["module","exports","initialState","status","A","B","C","google","login","data","googleLogin","dispatch","a","console","log","type","payload","googleLogout","Home","React","Component","compose","connect","state","actions","withRouter","Login","name","this","props","profileObj","className","placeholder","minLength","onChange","e","target","value","clientId","info","buttonText","onSuccess","onFailure","alert","cookiePolicy","isSignedIn","theme","uxMode","onLogoutSuccess","src","bg","pattern","Navbar","page","Sidebar","PageHeader","title","explanation","MainTab","Dashboard","Server","ReactDOM","render","StrictMode","store","createStore","action","applyMiddleware","reduxThunk","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.016cdcea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_bg.316c819a.png\";","module.exports = __webpack_public_path__ + \"static/media/login.4fba52c1.svg\";","import {\r\n  GOOGLE_LOGIN,\r\n  GOOGLE_LOGOUT\r\n} from './types.js'\r\n\r\nconst initialState = {\r\n  status: {\r\n    A: 'a',\r\n    B: 'B',\r\n    C: 'C'\r\n  },\r\n  google: {\r\n    login: false,\r\n    data: null\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GOOGLE_LOGIN:\r\n      return {\r\n        ...state,\r\n        google: {\r\n          ...state.google,\r\n          login: action.payload.login,\r\n          data: action.payload.data\r\n        }\r\n      }\r\n    case GOOGLE_LOGOUT:\r\n      return {\r\n        ...state,\r\n        google: {\r\n          ...state.google,\r\n          login: action.payload.login,\r\n          data: action.payload.data\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {\r\n  GOOGLE_LOGIN,\r\n  GOOGLE_LOGOUT\r\n} from './types.js'\r\n\r\nexport const googleLogin = (data) => {\r\n  return async (dispatch) => {\r\n    console.log(data)\r\n    dispatch({\r\n      type: GOOGLE_LOGIN,\r\n      payload: {\r\n        login: true,\r\n        data: data\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport const googleLogout = () => {\r\n  return async (dispatch) => {\r\n    dispatch({\r\n      type: GOOGLE_LOGOUT,\r\n      payload: {\r\n        login: false,\r\n        data: null\r\n      }\r\n    })\r\n  }\r\n}","export const GOOGLE_LOGIN = 'GOOGLE_LOGIN'\r\nexport const GOOGLE_LOGOUT = 'GOOGLE_LOGOUT'\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../../reducers/actions'\r\nimport './home.css'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Home</h1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(withRouter(Home))","export const google = {\r\n    googleID: '139616087849-vdl8nihgh0fu3miku7g2viqpe7s3cuh5.apps.googleusercontent.com',\r\n    cookiePolicy: 'single_host_origin',\r\n    loginText: 'Sign in with Google',\r\n    logoutText: 'Logout',\r\n    isSignedIn: true,\r\n    theme: 'dark',\r\n    uxMode: 'redirect'\r\n}","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nimport * as actions from '../../reducers/actions'\r\nimport * as valid from '../../functions/valid'\r\nimport * as info from '../../functions/info'\r\nimport './login.css'\r\n\r\nimport bg from '../../assets/img/login_bg.png'\r\nimport login from '../../assets/img/login.svg'\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        var ip = ''\r\n        var port = ''\r\n        var password = ''\r\n\r\n        var name = ''\r\n        if (this.props.google.login) {\r\n            name = this.props.google.data.profileObj.name\r\n        }\r\n\r\n        const googleLogin = (\r\n            <>\r\n                <div className='pwbox'>\r\n                    <input\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        minLength='6'\r\n                        onChange={(e) => {\r\n                            password = e.target.value\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className='vl' >\r\n                    or\r\n                </div>\r\n                <GoogleLogin\r\n                    className='authorization'\r\n                    clientId={info.google.googleID}\r\n                    buttonText={info.google.loginText}\r\n                    onSuccess={this.props.googleLogin}\r\n                    onFailure={(e) => { alert(e) }}\r\n                    cookiePolicy={info.google.cookiePolicy}\r\n                    isSignedIn={info.google.isSignedIn}\r\n                    theme={info.google.theme}\r\n                    uxMode={info.google.uxMode}\r\n                />\r\n            </>\r\n        )\r\n        const googleLogout = (\r\n            <>\r\n                <p className='authtext'>Welcome, {name}!</p>\r\n                <GoogleLogout\r\n                    className='authorization'\r\n                    clientId={info.google.googleID}\r\n                    buttonText={info.google.logoutText}\r\n                    theme={info.google.theme}\r\n                    onLogoutSuccess={this.props.googleLogout}\r\n                />\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                <img src={bg} className='bgimg' />\r\n                <div className='loginbox'>\r\n                    <img src={login} className='sideimg' />\r\n                    <div className='sidebox'>\r\n                        <div className='head'>\r\n                            <h1>Login to connect</h1>\r\n                            <h2>Manage your server from anywhere.</h2>\r\n                        </div>\r\n                        <p>Server information</p>\r\n                        <div className='inputarea'>\r\n                            <div className='ipbox'>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='IP Address'\r\n                                    pattern={valid.ipPattern}\r\n                                    onChange={(e) => {\r\n                                        ip = e.target.value\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className='portbox'>\r\n                                <input\r\n                                    type='text'\r\n                                    placeholder='Port'\r\n                                    pattern={valid.portPattern}\r\n                                    onChange={(e) => {\r\n                                        port = e.target.value\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <p>Authorization</p>\r\n                        <div className='inputarea'>\r\n                            {!this.props.google.login ? googleLogin : googleLogout}\r\n                        </div>\r\n                        <button type='button' className='loginbtn'>\r\n                            Connect\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    google: state.google\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(withRouter(Login))","export const ipPattern = '(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\r\nexport const portPattern = '([1-9]|[1-5]?[0-9]{2,4}|6[1-4][0-9]{3}|65[1-4][0-9]{2}|655[1-2][0-9]|6553[1-5])';\r\n\r\nexport const ip = (ip) => {\r\n    if (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(ip)) {\r\n        return (true);\r\n    }\r\n    return (false);\r\n}\r\n\r\nexport const port = (port) => {\r\n    if (/^([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])$/.test(port)) {\r\n        return (true);\r\n    }\r\n    return (false);\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../reducers/actions'\r\nimport './components.css'\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='nav'>\r\n                <h1>NitroBukkit</h1>\r\n                <h2>{this.props.page}</h2>\r\n                <div className='profile' >\r\n                    <img src='https://cdn.scratch.mit.edu/static/site/projects/thumbnails/1137/8007.png' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(Navbar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../reducers/actions'\r\nimport './components.css'\r\n\r\nclass Sidebar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='side'>\r\n                side\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(Sidebar)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../reducers/actions'\r\nimport './components.css'\r\n\r\nclass PageHeader extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className='pageheader'>\r\n                <h1>{this.props.title}</h1>\r\n                <h2>{this.props.explanation}</h2>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(PageHeader)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../../reducers/actions'\r\nimport './dashboard.css'\r\n\r\nimport PageHeader from '../../components/PageHeader'\r\n\r\nclass MainTab extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className='page'>\r\n                <PageHeader title='Server Status' explanation='Explanation' />\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(MainTab)","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../../reducers/actions'\r\n\r\nimport './dashboard.css'\r\nimport Navbar from '../../components/Navbar'\r\nimport Sidebar from '../../components/Sidebar'\r\nimport MainTab from './MainTab'\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar page='Dashboard' />\r\n                <Sidebar />\r\n                <MainTab />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(withRouter(Dashboard))","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport * as actions from '../../reducers/actions'\r\nimport './server.css'\r\n\r\nclass Server extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1>Server</h1>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\nexport default compose(connect(mapStateToProps, actions))(withRouter(Server))","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\nimport './assets/css/index.css'\r\n\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reduxThunk from 'redux-thunk'\r\nimport store from './reducers/store'\r\n\r\nimport Home from './pages/Home/Home'\r\nimport Login from './pages/Login/Login'\r\nimport Dashboard from './pages/Dashboard/Dashboard'\r\nimport Server from './pages/Server/Server'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <Provider store={createStore(store, applyMiddleware(reduxThunk))}>\r\n                <Route exact path='/' component={Home} />\r\n                <Route path='/login' component={Login} />\r\n                <Route path='/dashboard' component={Dashboard} />\r\n                <Route path='/server' component={Server} />\r\n            </Provider>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}